using Content.Client._NC.Trade.UI.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Robust.Client.UserInterface.CustomControls;
using Content.Shared._NC.Trade.UiDto;
using Robust.Client.UserInterface;
using Robust.Shared.Prototypes;

namespace Content.Client._NC.Trade.UI.Windows;

/// <summary>
/// Главное окно структурированного магазина (Купить / Продать / Обмен).
/// </summary>
[GenerateTypedNameReferences]
public sealed partial class NcStoreStructuredMenu : DefaultWindow
{
    public NcStoreStructuredMenu()
    {
        RobustXamlLoader.Load(this);
    }

    public void SetBalance(int amount) => BalanceValue.Text = amount.ToString();

    public void PopulateBuyListings(IEnumerable<StoreListingData> data, IPrototypeManager protos) => PopulateListings(BuyList, data, protos, OnBuyClicked);
    public void PopulateSellListings(IEnumerable<StoreListingData> data, IPrototypeManager protos) => PopulateListings(SellList, data, protos, OnSellClicked);
    public void PopulateExchangeListings(IEnumerable<StoreListingData> data, IPrototypeManager protos) => PopulateListings(ExchangeList, data, protos, OnExchangeClicked);

    private void PopulateListings(
        Control list,
        IEnumerable<StoreListingData> data,
        IPrototypeManager protos,
        Action<string>? onClicked
    )
    {
        list.DisposeAllChildren();

        foreach (var d in data)
        {
            var ctrl = new NcStoreListingControl();
            ctrl.SetListing(Loc.GetString($"store-listing-name-{d.ProtoId}"), d.Price);
            if (onClicked != null)
                ctrl.OnBuyPressed += () => onClicked(d.ProtoId);

            list.AddChild(ctrl);
        }
    }

    public event Action<string>? OnBuyClicked;
    public event Action<string>? OnSellClicked;
    public event Action<string>? OnExchangeClicked;
}
