using Content.Shared._NC.Trader;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.Graphics;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client._NC.Trade;

[GenerateTypedNameReferences]
public sealed partial class TraderListingControl : Control
{
    public event Action? OnClick;

    public TraderListingControl(TraderListingData data, Texture texture, string currencyType)
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        StoreItemName.Text = data.Name;
        StoreItemDescription.SetMessage(data.Description ?? string.Empty);
        StoreItemTexture.Texture = texture;

        var isSelling = data.Category == TraderCategory.Sell;
        StoreItemBuyButton.Text = isSelling ? Loc.GetString("trader-sell") : Loc.GetString("trader-buy");
        BuyTooltipLabel.Text = isSelling
            ? Loc.GetString("trader-sell-tooltip")
            : Loc.GetString("trader-buy-tooltip");

        StoreItemPrice.Text = isSelling ? $"+{data.Price}" : $"-{data.Price}";
        StoreItemPrice.StyleClasses.Add(isSelling ? "greenText" : "redText");

        var res = IoCManager.Resolve<IResourceCache>();
        var path = $"/Textures/Objects/Economy/currency_{currencyType.ToLower()}.png";
        if (!res.TryGetResource(new ResPath(path), out TextureResource? currencyTexture))
            currencyTexture = res.GetResource<TextureResource>(new ResPath("/Textures/Interface/Nano/currency-default.png"));

        CurrencyIcon.Texture = currencyTexture.Texture;
        CurrencyTooltipLabel.Text = Loc.GetString("trader-currency-tooltip");

        StoreItemBuyButton.OnPressed += _ => OnClick?.Invoke();
    }

    public void SetCountSuffix(int count)
    {
        if (StoreItemPrice == null || string.IsNullOrEmpty(StoreItemPrice.Text))
            return;

        var isSelling = StoreItemPrice.Text.StartsWith("+");
        var basePrice = isSelling
            ? StoreItemPrice.Text.Split(' ')[0]
            : "-" + StoreItemPrice.Text.Split(' ')[0].TrimStart('-');

        StoreItemPrice.Text = $"{basePrice} (Ã—{count})";
    }
}
